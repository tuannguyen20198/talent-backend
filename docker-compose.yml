version: '3.8'

services:
  # üóÑÔ∏è DATABASE
  db:
    image: postgres:13-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: nnpp
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # ‚ö° REDIS CACHE
  cache:
    image: redis:7.0.3-alpine
    container_name: redis-cache
    command: redis-server --save 20 1 --loglevel warning --requirepass password
    ports:
      - "6379:6379"

  # üîê SSO SERVICE (ph·ª•)
  sso-service:
    build:
      context: .
      dockerfile: Dockerfile.sso
    container_name: sso-service
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://user:password@host.docker.internal:5432/nnpp?schema=sso
      JWT_SECRET: your-super-secret-jwt-key
      NODE_ENV: production
    ports:
      - "5051:5051"

  # üíº TALENT SERVICE (ph·ª•)
  talent-service:
    build:
      context: .
      dockerfile: Dockerfile.talent
    container_name: talent-service
    depends_on:
      - db
      - sso-service
    environment:
      DATABASE_URL: postgresql://user:password@host.docker.internal:5432/nnpp?schema=talent
      SSO_SERVICE_URL: http://sso-service:5051
      NODE_ENV: production
    ports:
      - "5052:5052"

  # üåê BFF SERVICE (CH√çNH)
  bff-service:
    build:
      context: .
      dockerfile: Dockerfile.bff
    container_name: talent-backend
    restart: always
    depends_on:
      - db
      - cache
      - sso-service
      - talent-service
    environment:
      DATABASE_URL: postgresql://user:password@dbhost.docker.internal:5432/nnpp?schema=bff
      REDIS_URL: redis://:password@cache:6379
      SSO_SERVICE_URL: http://sso-service:5051
      TALENT_SERVICE_URL: http://talent-service:5052
      NODE_ENV: production
    ports:
      - "5050:5050"

volumes:
  dbdata:
  cache:
